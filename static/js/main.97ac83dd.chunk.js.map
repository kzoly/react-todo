{"version":3,"sources":["component/AddRow.js","component/AddNewRow.js","App.js","reportWebVitals.js","index.js"],"names":["TodoRow","todo","onDelete","onToggle","className","isDone","onClick","id","title","dueDate","style","cursor","AddTask","onAdd","date","Moment","format","useState","setText","toString","setDate","setIsDone","onSubmit","e","preventDefault","uuidv4","todoId","alert","type","placeholder","value","onChange","target","checked","currentTarget","valur","App","error","setError","isLoaded","setIsLoaded","items","setItems","filter","filterSet","showAddTask","setShowAddTask","useEffect","fetch","then","res","json","result","deleteItem","item","method","response","toggleReminder","map","datas","find","element","requestOptions","headers","body","JSON","stringify","data","console","log","catch","update","message","marginLeft","width","height","marginBottom","evt","text","task","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAagBA,EAVF,SAAC,GAAD,IAAIC,EAAJ,EAAIA,KAAOC,EAAX,EAAWA,SAAWC,EAAtB,EAAsBA,SAAtB,OAGV,+BACE,sBAAKC,UAAS,oBAAeH,EAAKI,OAAS,UAAU,IAAMC,QAAS,kBAAIH,EAASF,EAAKM,KAAtF,mBAAkGN,EAAKO,MAAvG,OACA,sBAAKJ,UAAU,WAAf,mBAAiCH,EAAKQ,QAAtC,OAEA,cAAC,IAAD,CAASC,MAAO,CAACC,OAAO,WAAYL,QAAS,kBAAIJ,EAASD,EAAKM,W,yBCNxDK,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACfC,EAAMC,MAASC,OAAO,cAE5B,EAAqBC,mBAAS,IAA9B,mBAAMT,EAAN,KAAYU,EAAZ,KACA,EAAuBD,mBAASH,EAAKK,YAArC,mBAAMV,EAAN,KAAcW,EAAd,KACA,EAAwBH,oBAAS,GAAjC,mBAAMZ,EAAN,KAAagB,EAAb,KAkBA,OACI,uBAAMjB,UAAU,WAAWkB,SAlBhB,SAACC,GAGZ,GAFAA,EAAEC,iBAEEhB,EAAJ,CAKA,IAAMD,EAAGkB,cACTZ,EAAM,CAACa,OAAQnB,EAAGA,KAAGC,QAAMC,UAAQJ,WAEnCa,EAAQ,IACRE,EAAQN,EAAKK,YACbE,GAAU,QATNM,MAAM,kBAcV,UACI,sBAAKvB,UAAU,eAAf,UACI,0CACA,uBAAOwB,KAAK,OAAOC,YAAY,UAAUC,MAAOtB,EAAOuB,SAAU,SAACR,GAAD,OAAKL,EAAQK,EAAES,OAAOF,aAI3F,sBAAK1B,UAAU,eAAf,UACI,0CACA,uBAAOwB,KAAK,OAAOC,YAAY,UAAWC,MAAOrB,EAASsB,SAAU,SAACR,GAAD,OAAKH,EAAQG,EAAES,OAAOF,aAI9F,sBAAK1B,UAAU,eAAf,UACI,4CACA,uBAAOwB,KAAK,WAAWE,MAAOzB,EAAQ4B,QAAS5B,EAAQ0B,SAAU,SAACR,GAAD,OAAKF,EAAUE,EAAEW,cAAcD,eAIpG,uBAAOL,KAAK,SAASC,YAAY,MAAKM,MAAM,kB,QCyGzCC,MAnJf,WACE,MAA0BnB,mBAAS,MAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAgCrB,oBAAS,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KAEA,EAAyBzB,mBAAS,IAAlC,mBAAO0B,EAAP,KAAcC,EAAd,KACA,EAAkC3B,oBAAS,GAA3C,mBAAM4B,EAAN,KAAkBC,EAAlB,KAKAC,qBAAU,WACRC,MAAM,0DACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCZ,GAAY,GACZE,EAASU,MAMX,SAACf,GACCG,GAAY,GACZF,EAASD,QAGd,IAkCH,IAAMgB,EAAa,SAAC9C,GAClBmC,EAASD,EAAME,QAAO,SAACW,GAAD,OAAQA,EAAK/C,KAAKA,MAPjCyC,MAQO,yDARK,IAQRzC,EARoB,CAC7BgD,OAAQ,WAETN,MAAK,SAAAO,GAAQ,OAAIA,EAASL,WAWvBM,EAAe,SAAClD,GACpBmC,EAASD,EAAMiB,KAAI,SAACJ,GAAD,OAAUA,EAAK/C,KAAKA,EAAV,2BAAoB+C,GAApB,IAAyBjD,QAAQiD,EAAKjD,SAAWiD,MAIhF,SAAgB/C,GAEd,IAAMoD,EAAOlB,EAAMmB,MAAK,SAAAC,GAAO,OAAIA,EAAQtD,KAAMA,KAEjDoD,EAAMtD,QAAQsD,EAAMtD,OACpB,IAAMyD,EAAiB,CACrBP,OAAQ,MACRQ,QAAS,CAAE,OAAU,mBACrB,eAAgB,oBAChBC,KAAMC,KAAKC,UAAUP,IAEvBX,MAAM,0DAAD,OAA2DzC,GAAMuD,GACrEb,MAAK,SAAAO,GAAQ,OAAIA,EAASL,UAC1BF,MAAK,SAAAkB,GACJC,QAAQC,IAAI,WAAYV,MAEzBW,OAAM,SAACjC,GACN+B,QAAQ/B,MAAM,SAAUA,MApB1BkC,CAAOhE,IA0BT,OAAI8B,EACK,0CAAaA,EAAMmC,WAChBjC,EAIT,qCACA,mDACC,sBAAKnC,UAAU,YAAf,UACE,cAAC,IAAD,CAAaA,UAAU,aAAaM,MAAO,CAAC+D,WAAW,OAAOC,MAAM,OAAOC,OAAO,OAAOC,aAAa,WACtG,uBACIxE,UAAU,YACV0B,MAAOa,EACPd,YAAY,SACZE,SAAU,SAAC8C,GAAD,OAAOjC,EAAUiC,EAAI7C,OAAOF,UAE1C,wBAAQ1B,UAAU,eAAe0E,KAAK,MAAMxE,QAAS,kBAAIwC,GAAgBD,IAAzE,sBAECA,GAAkB,sBAAKzC,UAAU,UAAf,UAEhB,kDACA,cAAC,EAAD,CAASS,MArFJ,SAACkE,GAEdrC,EAAS,GAAD,mBAAKD,GAAL,CAAWsC,KAElB,IAAMjB,EAAiB,CACrBP,OAAQ,OACRQ,QAAS,CAAE,OAAU,mBACrB,eAAgB,oBAChBC,KAAMC,KAAKC,UAAUa,IAEvB/B,MAAM,yDAA0Dc,GAC/Db,MAAK,SAAAO,GAAQ,OAAIA,EAASL,UAC1BF,MAAK,SAAAkB,GACJC,QAAQC,IAAI,WAAYU,MAEzBT,OAAM,SAACjC,GACN+B,QAAQ/B,MAAM,SAAUA,YAyEtB,6BACKI,EACEE,QAAO,SAACW,GAAD,OAAQA,EAAK9C,MAAMwE,cAAcC,SAAStC,EAAOqC,kBACxDtB,KAAI,SAAAJ,GAAI,OAEL,cAAC,EAAD,CAASrD,KAAMqD,EAAoBpD,SAAUmD,EAAYlD,SAAUsD,GAAzCH,EAAK/C,SAMxCkC,EAAMyC,OAAO,EAAG,GAAK,wBAjCnB,8CC9FIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97ac83dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst TodoRow=( { todo , onDelete , onToggle})=>(\r\n  \r\n\r\n    <li  >\r\n      <div className={`todoTitle ${todo.isDone ? 'checked':''}`} onClick={()=>onToggle(todo.id)}>      {todo.title} </div>\r\n      <div className=\"todoDate\">      {todo.dueDate} </div>\r\n      {/* <div>{todo.isDone.toString()}</div> */}\r\n      <FaTimes style={{cursor:'pointer'}} onClick={()=>onDelete(todo.id)} />\r\n    </li>\r\n )\r\n export default TodoRow;","import React,{useState} from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Moment from 'moment';\r\n\r\nexport const AddTask = ({onAdd}) => {\r\n    const date =Moment().format('YYYY-MM-DD');\r\n\r\n    const[title,setText]=useState('')\r\n    const[dueDate,setDate]=useState(date.toString())\r\n    const[isDone,setIsDone]=useState(false)\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!title){\r\n            alert('add task text');\r\n            return;\r\n        }\r\n        \r\n        const id=uuidv4();\r\n        onAdd({todoId: id,id,title,dueDate,isDone})\r\n\r\n        setText('');\r\n        setDate(date.toString());\r\n        setIsDone(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task:</label>\r\n                <input type='text' placeholder='AddTask' value={title} onChange={(e)=>setText(e.target.value)} />\r\n\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label>Date:</label>\r\n                <input type='date' placeholder='AddDate'  value={dueDate} onChange={(e)=>setDate(e.target.value)}/>\r\n\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label>IsDone:</label>\r\n                <input type='checkbox' value={isDone} checked={isDone} onChange={(e)=>setIsDone(e.currentTarget.checked)} />\r\n\r\n            </div>\r\n            \r\n            <input type='submit' placeholder='Add'valur='save task' />\r\n        </form>\r\n    )\r\n}\r\n","import './App.css';\nimport React,{useState,useEffect} from 'react'\nimport TodoRow from './component/AddRow';\nimport { AddTask } from './component/AddNewRow';\nimport {BiSearchAlt } from 'react-icons/bi'\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  \n  const [filter,filterSet]=useState(\"\");\n  const[showAddTask,setShowAddTask]=useState(true);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://610e4a9848beae001747baa4.mockapi.io/myapptodo2\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n          \n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n  \n  \n  \n  //add task\n\n  const addTask=(task)=>{\n    //add to list\n   setItems([...items,task])\n   //add to file\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Accept': 'application/json',\n      'Content-Type': 'application/json',},\n      body: JSON.stringify(task)\n    };\n    fetch('https://610e4a9848beae001747baa4.mockapi.io/myapptodo2', requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', task);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }\n\n\n  function deleteData(item, url) {\n    return fetch(url + '/' + item, {\n      method: 'delete'\n    })\n    .then(response => response.json());\n  }\n  //delete item task\n  const deleteItem = (id) =>{\n    setItems(items.filter((item)=>item.id!==id));\n    deleteData(id,'https://610e4a9848beae001747baa4.mockapi.io/myapptodo2');\n  }\n\n\n  \n  //  toggle reminder\n  const toggleReminder=(id) => {\n    setItems(items.map((item) => item.id===id ? { ...item,isDone:!item.isDone } : item))\n    update(id)\n  }\n  \n  function update(id){\n\n    const datas= items.find(element => element.id ===id);\n    //console.log(datas)\n    datas.isDone=!datas.isDone;\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Accept': 'application/json',\n      'Content-Type': 'application/json',},\n      body: JSON.stringify(datas)\n    };\n    fetch(`https://610e4a9848beae001747baa4.mockapi.io/myapptodo2/${id}`, requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', datas);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }\n  //console.log(items);\n\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n     <>\n     <h1>ReactJS Todo List</h1>\n      <div className=\"tablebody\">\n        <BiSearchAlt className=\"searchIcon\" style={{marginLeft:\"45px\",width:\"30px\",height:\"30px\",marginBottom:\"-10px\"}}/>\n        <input \n            className=\"searchBar\"\n            value={filter}\n            placeholder=\"search\"\n            onChange={(evt)=>filterSet(evt.target.value)}\n          />\n        <button className=\"showHideTask\" text=\"Add\" onClick={()=>setShowAddTask(!showAddTask)}>Add task</button>\n\n        {showAddTask  &&   <div className=\"newTodo\">  \n            \n           <label>Add new toodo</label>\n           <AddTask onAdd={addTask}/>\n          \n          </div> \n        }\n        <ul>\n            {items\n              .filter((item)=>item.title.toLowerCase().includes(filter.toLowerCase()))\n              .map(item => ( \n\n                  <TodoRow todo={item} key={item.id} onDelete={deleteItem} onToggle={toggleReminder} />\n                  \n                ))}\n        </ul> \n        \n        \n        {items.length>0?(''):('No item to show')}\n\n        \n\n      </div>    \n        \n       \n      </>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}